/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.incurrency.framework.display;

import com.ib.client.Contract;
import static com.incurrency.framework.Algorithm.*;
import com.incurrency.framework.BeanConnection;
import com.incurrency.framework.BeanSymbol;
import com.incurrency.framework.DateUtil;
import com.incurrency.framework.Parameters;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author pankaj
 */
public class MarketDataForm extends javax.swing.JFrame {

    private int rowno;
    private static final Logger logger = Logger.getLogger(MarketDataForm.class.getName());

    /**
     * Creates new form MarketData
     */
    public MarketDataForm(int rowno) {
        initComponents();
        this.rowno = rowno;
        BeanSymbol s = Parameters.symbol.get(rowno);
        String symbol = s.getBrokerSymbol() + "_" + s.getType() + "_" + s.getExchange();
        if (s.getExpiry() != null) {
            symbol = symbol + "_" + s.getExpiry();
        }
        if (s.getRight() != null) {
            symbol = symbol + "_" + s.getRight() + "_" + s.getOption();
        }
        this.lblSymbol.setText(symbol);
        if (globalProperties.getProperty("datasource") != null) {
            String dataSource = globalProperties.getProperty("datasource").toString().trim();
            this.lblCurrentAccount.setText(dataSource);
        } else if (s.getConnectionidUsedForMarketData() >= 0) {
            this.lblCurrentAccount.setText(Parameters.connection.get(s.getConnectionidUsedForMarketData()).getAccountName());
            this.lblCurrentPort.setText(Integer.toString(Parameters.connection.get(s.getConnectionidUsedForMarketData()).getPort()));
            this.lblCurrentClientID.setText(Integer.toString(Parameters.connection.get(s.getConnectionidUsedForMarketData()).getClientID()));
        }
        this.lblLatestTime.setText(DateUtil.getFormattedDate("yyyy-MM-dd HH:mm:ss", s.getLastPriceTime()));
        for (BeanConnection c : Parameters.connection) {
            this.comboNewAccount.addItem(c.getAccountName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        comboNewAccount = new javax.swing.JComboBox();
        cmdStartStreaming = new javax.swing.JButton();
        cmdStop = new javax.swing.JButton();
        cmdStartSnapshot = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblCurrentAccount = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblCurrentPort = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblCurrentClientID = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblLatestTime = new javax.swing.JLabel();
        cmdClose = new javax.swing.JButton();
        lblSymbol = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Request /Cancel Market Data");
        setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(600, 166));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("New Source:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(comboNewAccount, gridBagConstraints);

        cmdStartStreaming.setText("Restart Streaming Data");
        cmdStartStreaming.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdStartStreamingActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(cmdStartStreaming, gridBagConstraints);

        cmdStop.setText("Stop Market Data");
        cmdStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdStopActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(cmdStop, gridBagConstraints);

        cmdStartSnapshot.setText("Restart Snapshot Data");
        cmdStartSnapshot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdStartSnapshotActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(cmdStartSnapshot, gridBagConstraints);

        jLabel4.setText("Symbol Selected");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(jLabel4, gridBagConstraints);

        jLabel5.setText("Current Source:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(jLabel5, gridBagConstraints);

        lblCurrentAccount.setText("Account Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(lblCurrentAccount, gridBagConstraints);

        jLabel7.setText("Port");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(jLabel7, gridBagConstraints);

        lblCurrentPort.setText("...");
        lblCurrentPort.setMaximumSize(new java.awt.Dimension(34, 14));
        lblCurrentPort.setMinimumSize(new java.awt.Dimension(34, 14));
        lblCurrentPort.setPreferredSize(new java.awt.Dimension(34, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(lblCurrentPort, gridBagConstraints);

        jLabel9.setText("Client ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(jLabel9, gridBagConstraints);

        lblCurrentClientID.setText("...");
        lblCurrentClientID.setMaximumSize(new java.awt.Dimension(34, 14));
        lblCurrentClientID.setMinimumSize(new java.awt.Dimension(34, 14));
        lblCurrentClientID.setPreferredSize(new java.awt.Dimension(34, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(lblCurrentClientID, gridBagConstraints);

        jLabel6.setText("Last Update Time");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(jLabel6, gridBagConstraints);

        lblLatestTime.setText("...");
        lblLatestTime.setMaximumSize(new java.awt.Dimension(44, 14));
        lblLatestTime.setMinimumSize(new java.awt.Dimension(120, 14));
        lblLatestTime.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(lblLatestTime, gridBagConstraints);

        cmdClose.setText("Close");
        cmdClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(cmdClose, gridBagConstraints);

        lblSymbol.setText("symbol");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(lblSymbol, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 9;
        gridBagConstraints.ipadx = 10;
        getContentPane().add(jPanel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 9;
        gridBagConstraints.ipadx = 20;
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdStartStreamingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdStartStreamingActionPerformed
        //first cancel data request
        BeanSymbol s = Parameters.symbol.get(getRowno());
        int oldconnection = s.getConnectionidUsedForMarketData();
        int newconnection = this.comboNewAccount.getSelectedIndex();
        if (oldconnection >= 0) {
            Parameters.connection.get(oldconnection).getWrapper().cancelMarketData(s);
            s.setConnectionidUsedForMarketData(newconnection);
        }
        Contract con;
        con = Parameters.connection.get(newconnection).getWrapper().createContract(s);
        try {
            Parameters.connection.get(newconnection).getWrapper().getMktData(s, false);
        } catch (Exception e) {
            logger.log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_cmdStartStreamingActionPerformed

    private void cmdCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCloseActionPerformed
        dispose(); //Destroy the JFrame object
    }//GEN-LAST:event_cmdCloseActionPerformed

    private void cmdStartSnapshotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdStartSnapshotActionPerformed
        //first cancel data request
        BeanSymbol s = Parameters.symbol.get(getRowno());
        int oldconnection = s.getConnectionidUsedForMarketData();
        int newconnection = this.comboNewAccount.getSelectedIndex();
        if (oldconnection >= 0) {
            Parameters.connection.get(oldconnection).getWrapper().cancelMarketData(s);
        }
//        Contract con;
//        con=Parameters.connection.get(newconnection).getWrapper().createContract(s);
        try {
            Parameters.connection.get(newconnection).getWrapper().getMktData(s, true);
        } catch (Exception e) {
            logger.log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_cmdStartSnapshotActionPerformed

    private void cmdStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdStopActionPerformed
        BeanSymbol s = Parameters.symbol.get(getRowno());
        int oldconnection = s.getConnectionidUsedForMarketData();
        if (oldconnection >= 0) {
            Parameters.connection.get(oldconnection).getWrapper().cancelMarketData(s);
        }
    }//GEN-LAST:event_cmdStopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MarketDataForm(0).setVisible(true);
            }
        });
    }

    public static void stopVisible(boolean state) {
        cmdStop.setVisible(state);
    }

    public static void streamingVisible(boolean state) {
        cmdStartStreaming.setVisible(state);
    }

    public static void snapShotVisible(boolean state) {
        cmdStartSnapshot.setVisible(state);
    }

    public static void closeVisible(boolean state) {
        cmdClose.setVisible(state);
    }

    /**
     * @return the rowno
     */
    public int getRowno() {
        return rowno;
    }

    /**
     * @param rowno the rowno to set
     */
    public void setRowno(int rowno) {
        this.rowno = rowno;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton cmdClose;
    private static javax.swing.JButton cmdStartSnapshot;
    private static javax.swing.JButton cmdStartStreaming;
    private static javax.swing.JButton cmdStop;
    private javax.swing.JComboBox comboNewAccount;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblCurrentAccount;
    private javax.swing.JLabel lblCurrentClientID;
    private javax.swing.JLabel lblCurrentPort;
    private javax.swing.JLabel lblLatestTime;
    private javax.swing.JLabel lblSymbol;
    // End of variables declaration//GEN-END:variables
}
